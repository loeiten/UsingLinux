Some tutorials:
===============
http://readwrite.com/2013/09/30/understanding-github-a-journey-for-beginners-part-1#awesm=~oFlQCvoJank0tf
http://readwrite.com/2013/10/02/github-for-beginners-part-2#awesm=~oFlUvD0lcooGkC


To not have to type the username and pw all the time:
=====================================================
NOTE: You have to change the URL from HTTP to SSH when making an SSH key
https://help.github.com/articles/generating-ssh-keys/
https://help.github.com/articles/changing-a-remote-s-url/


Daily use
=========
git add readme.txt
git commit -m “Add readme.txt”
git push
# Add all changed files
git add -u


Create folder at github
=======================
git remote add origin https://github.com/uname/folder.git


Revert all changes
==================
http://stackoverflow.com/questions/1146973/how-do-i-revert-all-local-changes-in-git-managed-project-to-previous-state
# Remove all untracked files
git clean -f 
# Revert changes made to your working copy
git checkout .
# Revert changes made to the index (i.e., that you have added)
git reset
# Revert a change that you have committed
git revert ...


How git works
=============
http://stackoverflow.com/questions/2745076/what-are-the-differences-between-git-commit-and-git-push


Branches and merging
====================
# Clone a branch
#http://stackoverflow.com/questions/1911109/git-clone-a-specific-branch
git clone -b <branch> <remote_repo>
# Brances and merging
# http://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging
# Make branch
git checkout -b [name_of_your_new_branch]
# Push branch
git push origin [name_of_your_new_branch]


Resolve a confilct
==================
https://help.github.com/articles/resolving-a-merge-conflict-from-the-command-line/
